---
title: "Week 7 report Group 8"
format: html
---

# PCA tidyverse style on gravier data

# Tasks

| Task                | Responsible | Done? |
|---------------------|-------------|-------|
| Create this file    | Dana        | Yes   |
| Load libraries      | Vakare      | Yes   |
| Load data           | Dana        | Yes   |
| Clean data          | Greta       | No    |
| Produce first plot  | Dana        | No    |
| Produce middle plot | Vakare      | No    |
| Reproduce last plot | Greta       | No    |

# Merging comment

Use system("git merge main") in R console to merge your branch to main. Remember to Pull before the merge.

# Load libraries

```{r}
library("tidyverse")
library("here")
library("gitcreds")
library("usethis")
library("broom")
library('ggthemes')
```

# Set up git merging conflict code

```{r}
usethis::use_git_config(pull.rebase = "false")
```

# Download data the first time and save it ONLY RUN THIS ONCE IF YOU DO NOT HAVE THE DATA

```{r}
# target_url <- "https://github.com/ramhiser/datamicroarray/raw/master/data/gravier.RData"
# output_file <- "data/_raw/gravier.RData"
# curl::curl_download(url = target_url, destfile = output_file)
```

# Load data

```{r}
load(file = here("data/_raw/gravier.RData")) # loads as gravier
```

# Inspect data

```{r}
gravier |> names()
```

```{r}
gravier |> pluck("x") |> head()
```

```{r}
gravier |> pluck("y") |> head()
```

# Clean data

This is tidy data since each variable forms a column, each observation forms a row, and each value has a single cell.

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble()
gravier_clean
```

```{r}
gravier_clean  |> 
  write_tsv(file = "data/02_gravier_clean.tsv.gz")
```

# First plot

**Running PCA (we need this for all 3 plots):**

```{r}

pca_fit <- gravier_clean |>
select(where(is.numeric)) |>      # retain only numeric columns
  prcomp(scale = TRUE)            # do PCA on scaled data
```

# Second plot

```{r}
pca_fit |>
  tidy(matrix = "rotation")
```

```{r}

# Convert rotation matrix to tidy long format
pca_long <- tidy(pca_fit, matrix = "rotation")

# Turning long data into wide data
pca_wide <- pca_long |>
  pivot_wider(names_from = PC, values_from = value)

# picking 10 random genes to plot
set.seed(5606)
pca_sample <- pca_wide |>
  slice_sample(n = min(10, nrow(pca_wide)))

# Defining arrow style
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(5, "pt")
)

# Plotting selected data
ggplot(pca_sample, aes(x = `1`, y = `2`)) + # 1 is PC1, 2 is PC2
  geom_segment(aes(xend = 0, yend = 0), arrow = arrow_style, alpha = 0.7, color = "magenta") +
  geom_text(
    aes(label = column),
    hjust = 1,
    nudge_x = 0.007,
    color = "purple",
    size = 3,
    fontface = "bold") +
  coord_fixed() +
  theme_minimal() +
  labs(x = "PC1",
       y = "PC2")
```

# Third plot

## Look at the variance explained by each PC

In this plot we are looking at the variance explained by each principle component.

```{r}
pca_fit |>
  tidy(matrix = "eigenvalues")
#a tidy tibble summarising the eigenvalues / variances for each principal component.
```

```{r}
#get tibble of PCs and variances
pca_fit |>
  tidy(matrix = "eigenvalues") |>
# choose only the first 10 components 
  filter(PC <= 10) |>
# start ggplot
  ggplot(aes(x = PC, y = percent)) + 
#draw bars; set color and transparency
  geom_col(fill= "#56B4E9", alpha = 0.7) +
#draw tick marks only for first 10 PCs
  scale_x_continuous(breaks = 1:10) +
#format y-axis labels as percentages and fix the spacing around your plot area
  scale_y_continuous(
    labels = scales::percent,
    expand = expansion(mult = c(0, 0.05))
  ) +
#add labels  
  theme(plot.title = element_text(size = 10)) + 
  labs(
    title = "Variation of the First 10 Principal Components",
    x = "Principal components", 
    y = 'Percent') +
#adjust the grid  
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),   
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_line(color = "gray50", size = 0.2))
 
```

The first component captures more than 8 percent of the variation in the data. The remaining nine components, among the first ten, capture progressively smaller percentages of the variation.
